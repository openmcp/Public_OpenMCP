#!/bin/bash

OPENMCP_API_SERVER="openmcp-apiserver.openmcp.default-domain.svc.openmcp.example.org"
PORT="8080"

if [[ "$1" == "GKE" ]] || [[ "$1" == "EKS" ]] || [[ "$1" == "AKS" ]]; then
  echo "Cloud Cluster [$1]"
else
  echo "Error : Input Cloud Cluster Type"
  echo "ex) kubectl regist-join GKE gke-cluster"
  exit 1
fi

if [ "$2" = "" ]; then
  echo "Error : Input Cluster Name"
  echo "ex) kubectl regist-join GKE gke-cluster"
  exit 1
fi

touch kubeconfig
export KUBECONFIG=./kubeconfig

if [ "$1" == "GKE" ]; then
  location=$(gcloud container clusters list | grep $2 | awk '{print $2}')
  echo $location
  gcloud container clusters get-credentials $2 --region $location
  kubectl get pods &>-
  rm -
elif [ "$1" == "EKS" ]; then

  aws eks update-kubeconfig --name $2
  location=$(aws configure get region)
  echo $location

elif [ "$1" == "AKS" ]; then
  if [ "$3" = "" ]; then
    echo "Error : Input Cluster Region"
    echo "ex) kubectl regist-join AKS aks-cluster eastus"
    exit 1
  fi
  az aks get-credentials --resource-group openmcp --name $2 --file ./kubeconfig
  location=$3
fi

export KUBECONFIG=~/.kube/config
echo -n | openssl s_client -connect $OPENMCP_API_SERVER:$PORT | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' > server.crt

curl "https://$OPENMCP_API_SERVER:$PORT/joinCloud?clustername=$2&clustertype=$1&clusterlocation=$location" -F file=@"kubeconfig" --cacert server.crt

rm server.crt
rm kubeconfig