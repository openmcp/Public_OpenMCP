// +build !ignore_autogenerated

// This file was autogenerated by openapi-gen. Do not edit it manually!

package v1alpha1

import (
	spec "github.com/go-openapi/spec"
	common "k8s.io/kube-openapi/pkg/common"
)

func GetOpenAPIDefinitions(ref common.ReferenceCallback) map[string]common.OpenAPIDefinition {
	return map[string]common.OpenAPIDefinition{
		"openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPCluster":       schema_pkg_apis_cluster_v1alpha1_OpenMCPCluster(ref),
		"openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterSpec":   schema_pkg_apis_cluster_v1alpha1_OpenMCPClusterSpec(ref),
		"openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterStatus": schema_pkg_apis_cluster_v1alpha1_OpenMCPClusterStatus(ref),
	}
}

func schema_pkg_apis_cluster_v1alpha1_OpenMCPCluster(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPCluster is the Schema for the OpenMCPClusters API",
				Properties: map[string]spec.Schema{
					"kind": {
						SchemaProps: spec.SchemaProps{
							Description: "Kind is a string value representing the REST cluster this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git/community/contributors/devel/api-conventions.md#types-kinds",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"apiVersion": {
						SchemaProps: spec.SchemaProps{
							Description: "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git/community/contributors/devel/api-conventions.md#clusters",
							Type:        []string{"string"},
							Format:      "",
						},
					},
					"metadata": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta"),
						},
					},
					"spec": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterSpec"),
						},
					},
					"status": {
						SchemaProps: spec.SchemaProps{
							Ref: ref("openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterStatus"),
						},
					},
				},
			},
		},
		Dependencies: []string{
			"k8s.io/apimachinery/pkg/apis/meta/v1.ObjectMeta", "openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterSpec", "openmcp/openmcp/apis/cluster/v1alpha1.OpenMCPClusterStatus"},
	}
}

func schema_pkg_apis_cluster_v1alpha1_OpenMCPClusterSpec(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPClusterSpec defines the desired state of OpenMCPCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}

func schema_pkg_apis_cluster_v1alpha1_OpenMCPClusterStatus(ref common.ReferenceCallback) common.OpenAPIDefinition {
	return common.OpenAPIDefinition{
		Schema: spec.Schema{
			SchemaProps: spec.SchemaProps{
				Description: "OpenMCPClusterStatus defines the observed state of OpenMCPCluster",
				Properties:  map[string]spec.Schema{},
			},
		},
		Dependencies: []string{},
	}
}
