// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.4
// source: generated.proto

package protobuf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type HASDeployList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HASDeployInfo []*HASDeployInfo `protobuf:"bytes,1,rep,name=HASDeployInfo,proto3" json:"HASDeployInfo,omitempty"`
}

func (x *HASDeployList) Reset() {
	*x = HASDeployList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HASDeployList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HASDeployList) ProtoMessage() {}

func (x *HASDeployList) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HASDeployList.ProtoReflect.Descriptor instead.
func (*HASDeployList) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{0}
}

func (x *HASDeployList) GetHASDeployInfo() []*HASDeployInfo {
	if x != nil {
		return x.HASDeployInfo
	}
	return nil
}

type HASDeployInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace string   `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	Clusters  []string `protobuf:"bytes,3,rep,name=Clusters,proto3" json:"Clusters,omitempty"`
}

func (x *HASDeployInfo) Reset() {
	*x = HASDeployInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HASDeployInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HASDeployInfo) ProtoMessage() {}

func (x *HASDeployInfo) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HASDeployInfo.ProtoReflect.Descriptor instead.
func (*HASDeployInfo) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{1}
}

func (x *HASDeployInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HASDeployInfo) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *HASDeployInfo) GetClusters() []string {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type ResponseHASDeployList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseHASDeploy []*ResponseHASDeploy `protobuf:"bytes,1,rep,name=ResponseHASDeploy,proto3" json:"ResponseHASDeploy,omitempty"`
}

func (x *ResponseHASDeployList) Reset() {
	*x = ResponseHASDeployList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHASDeployList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHASDeployList) ProtoMessage() {}

func (x *ResponseHASDeployList) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHASDeployList.ProtoReflect.Descriptor instead.
func (*ResponseHASDeployList) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseHASDeployList) GetResponseHASDeploy() []*ResponseHASDeploy {
	if x != nil {
		return x.ResponseHASDeploy
	}
	return nil
}

type ResponseHASDeploy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Namespace     string `protobuf:"bytes,2,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PodState      string `protobuf:"bytes,3,opt,name=PodState,proto3" json:"PodState,omitempty"`
	Action        string `protobuf:"bytes,4,opt,name=Action,proto3" json:"Action,omitempty"`
	TargetCluster string `protobuf:"bytes,5,opt,name=TargetCluster,proto3" json:"TargetCluster,omitempty"`
}

func (x *ResponseHASDeploy) Reset() {
	*x = ResponseHASDeploy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHASDeploy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHASDeploy) ProtoMessage() {}

func (x *ResponseHASDeploy) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHASDeploy.ProtoReflect.Descriptor instead.
func (*ResponseHASDeploy) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseHASDeploy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResponseHASDeploy) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *ResponseHASDeploy) GetPodState() string {
	if x != nil {
		return x.PodState
	}
	return ""
}

func (x *ResponseHASDeploy) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *ResponseHASDeploy) GetTargetCluster() string {
	if x != nil {
		return x.TargetCluster
	}
	return ""
}

type HASInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HPAName             string           `protobuf:"bytes,1,opt,name=HPAName,proto3" json:"HPAName,omitempty"`
	HPANamespace        string           `protobuf:"bytes,2,opt,name=HPANamespace,proto3" json:"HPANamespace,omitempty"`
	ClusterName         string           `protobuf:"bytes,3,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	HASRebalancingCount map[string]int32 `protobuf:"bytes,4,rep,name=HASRebalancingCount,proto3" json:"HASRebalancingCount,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	HPAMinORMaxReplicas map[string]int32 `protobuf:"bytes,5,rep,name=HPAMinORMaxReplicas,proto3" json:"HPAMinORMaxReplicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	HPACurrentReplicas  map[string]int32 `protobuf:"bytes,6,rep,name=HPACurrentReplicas,proto3" json:"HPACurrentReplicas,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *HASInfo) Reset() {
	*x = HASInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HASInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HASInfo) ProtoMessage() {}

func (x *HASInfo) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HASInfo.ProtoReflect.Descriptor instead.
func (*HASInfo) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{4}
}

func (x *HASInfo) GetHPAName() string {
	if x != nil {
		return x.HPAName
	}
	return ""
}

func (x *HASInfo) GetHPANamespace() string {
	if x != nil {
		return x.HPANamespace
	}
	return ""
}

func (x *HASInfo) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *HASInfo) GetHASRebalancingCount() map[string]int32 {
	if x != nil {
		return x.HASRebalancingCount
	}
	return nil
}

func (x *HASInfo) GetHPAMinORMaxReplicas() map[string]int32 {
	if x != nil {
		return x.HPAMinORMaxReplicas
	}
	return nil
}

func (x *HASInfo) GetHPACurrentReplicas() map[string]int32 {
	if x != nil {
		return x.HPACurrentReplicas
	}
	return nil
}

type ResponseHAS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TargetCluster string `protobuf:"bytes,1,opt,name=TargetCluster,proto3" json:"TargetCluster,omitempty"`
}

func (x *ResponseHAS) Reset() {
	*x = ResponseHAS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseHAS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseHAS) ProtoMessage() {}

func (x *ResponseHAS) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseHAS.ProtoReflect.Descriptor instead.
func (*ResponseHAS) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{5}
}

func (x *ResponseHAS) GetTargetCluster() string {
	if x != nil {
		return x.TargetCluster
	}
	return ""
}

type LBInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterNameList []string `protobuf:"bytes,1,rep,name=ClusterNameList,proto3" json:"ClusterNameList,omitempty"`
	ClientIP        string   `protobuf:"bytes,2,opt,name=ClientIP,proto3" json:"ClientIP,omitempty"`
}

func (x *LBInfo) Reset() {
	*x = LBInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LBInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LBInfo) ProtoMessage() {}

func (x *LBInfo) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LBInfo.ProtoReflect.Descriptor instead.
func (*LBInfo) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{6}
}

func (x *LBInfo) GetClusterNameList() []string {
	if x != nil {
		return x.ClusterNameList
	}
	return nil
}

func (x *LBInfo) GetClientIP() string {
	if x != nil {
		return x.ClientIP
	}
	return ""
}

type ResponseLB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoreMap map[string]float64 `protobuf:"bytes,1,rep,name=ScoreMap,proto3" json:"ScoreMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *ResponseLB) Reset() {
	*x = ResponseLB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseLB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseLB) ProtoMessage() {}

func (x *ResponseLB) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseLB.ProtoReflect.Descriptor instead.
func (*ResponseLB) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{7}
}

func (x *ResponseLB) GetScoreMap() map[string]float64 {
	if x != nil {
		return x.ScoreMap
	}
	return nil
}

type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClusterName string `protobuf:"bytes,1,opt,name=ClusterName,proto3" json:"ClusterName,omitempty"`
	NodeName    string `protobuf:"bytes,2,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{8}
}

func (x *NodeInfo) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *NodeInfo) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type ResponseNetwork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RX int64 `protobuf:"varint,1,opt,name=RX,proto3" json:"RX,omitempty"`
	TX int64 `protobuf:"varint,2,opt,name=TX,proto3" json:"TX,omitempty"`
}

func (x *ResponseNetwork) Reset() {
	*x = ResponseNetwork{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generated_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseNetwork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseNetwork) ProtoMessage() {}

func (x *ResponseNetwork) ProtoReflect() protoreflect.Message {
	mi := &file_generated_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseNetwork.ProtoReflect.Descriptor instead.
func (*ResponseNetwork) Descriptor() ([]byte, []int) {
	return file_generated_proto_rawDescGZIP(), []int{9}
}

func (x *ResponseNetwork) GetRX() int64 {
	if x != nil {
		return x.RX
	}
	return 0
}

func (x *ResponseNetwork) GetTX() int64 {
	if x != nil {
		return x.TX
	}
	return 0
}

var File_generated_proto protoreflect.FileDescriptor

var file_generated_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x22, 0x4e, 0x0a, 0x0d, 0x48,
	0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d,
	0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x48,
	0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x48, 0x41,
	0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x5d, 0x0a, 0x0d, 0x48,
	0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x22, 0x62, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x52, 0x11, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x22, 0x9f,
	0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6f, 0x64, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x22, 0xd7, 0x04, 0x0a, 0x07, 0x48, 0x41, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x48, 0x50, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48,
	0x50, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x50, 0x41, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x50,
	0x41, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x5c, 0x0a, 0x13,
	0x48, 0x41, 0x53, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x48, 0x41, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x41, 0x53,
	0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x13, 0x48, 0x41, 0x53, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5c, 0x0a, 0x13, 0x48, 0x50,
	0x41, 0x4d, 0x69, 0x6e, 0x4f, 0x52, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x48, 0x41, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x50, 0x41, 0x4d, 0x69,
	0x6e, 0x4f, 0x52, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x13, 0x48, 0x50, 0x41, 0x4d, 0x69, 0x6e, 0x4f, 0x52, 0x4d, 0x61, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x12, 0x59, 0x0a, 0x12, 0x48, 0x50, 0x41, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x48, 0x41, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x50, 0x41, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x12, 0x48, 0x50, 0x41, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x73, 0x1a, 0x46, 0x0a, 0x18, 0x48, 0x41, 0x53, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x46, 0x0a, 0x18, 0x48,
	0x50, 0x41, 0x4d, 0x69, 0x6e, 0x4f, 0x52, 0x4d, 0x61, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x45, 0x0a, 0x17, 0x48, 0x50, 0x41, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x22,
	0x4e, 0x0a, 0x06, 0x4c, 0x42, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0f, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x50, 0x22,
	0x89, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x42, 0x12, 0x3e,
	0x0a, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x42, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x1a, 0x3b,
	0x0a, 0x0d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x48, 0x0a, 0x08, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x52, 0x58, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x52, 0x58, 0x12, 0x0e, 0x0a, 0x02, 0x54, 0x58, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x54, 0x58, 0x32, 0xe8, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x40, 0x0a, 0x12,
	0x53, 0x65, 0x6e, 0x64, 0x48, 0x41, 0x53, 0x4d, 0x69, 0x6e, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x48, 0x41,
	0x53, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x48, 0x41, 0x53, 0x4d, 0x61, 0x78, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x12, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x48, 0x41, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x4c, 0x42, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4c, 0x42,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4c, 0x42, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x13,
	0x53, 0x65, 0x6e, 0x64, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x12, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x50, 0x41, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4c, 0x69, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x41, 0x53, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_generated_proto_rawDescOnce sync.Once
	file_generated_proto_rawDescData = file_generated_proto_rawDesc
)

func file_generated_proto_rawDescGZIP() []byte {
	file_generated_proto_rawDescOnce.Do(func() {
		file_generated_proto_rawDescData = protoimpl.X.CompressGZIP(file_generated_proto_rawDescData)
	})
	return file_generated_proto_rawDescData
}

var file_generated_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_generated_proto_goTypes = []interface{}{
	(*HASDeployList)(nil),         // 0: protobuf.HASDeployList
	(*HASDeployInfo)(nil),         // 1: protobuf.HASDeployInfo
	(*ResponseHASDeployList)(nil), // 2: protobuf.ResponseHASDeployList
	(*ResponseHASDeploy)(nil),     // 3: protobuf.ResponseHASDeploy
	(*HASInfo)(nil),               // 4: protobuf.HASInfo
	(*ResponseHAS)(nil),           // 5: protobuf.ResponseHAS
	(*LBInfo)(nil),                // 6: protobuf.LBInfo
	(*ResponseLB)(nil),            // 7: protobuf.ResponseLB
	(*NodeInfo)(nil),              // 8: protobuf.NodeInfo
	(*ResponseNetwork)(nil),       // 9: protobuf.ResponseNetwork
	nil,                           // 10: protobuf.HASInfo.HASRebalancingCountEntry
	nil,                           // 11: protobuf.HASInfo.HPAMinORMaxReplicasEntry
	nil,                           // 12: protobuf.HASInfo.HPACurrentReplicasEntry
	nil,                           // 13: protobuf.ResponseLB.ScoreMapEntry
}
var file_generated_proto_depIdxs = []int32{
	1,  // 0: protobuf.HASDeployList.HASDeployInfo:type_name -> protobuf.HASDeployInfo
	3,  // 1: protobuf.ResponseHASDeployList.ResponseHASDeploy:type_name -> protobuf.ResponseHASDeploy
	10, // 2: protobuf.HASInfo.HASRebalancingCount:type_name -> protobuf.HASInfo.HASRebalancingCountEntry
	11, // 3: protobuf.HASInfo.HPAMinORMaxReplicas:type_name -> protobuf.HASInfo.HPAMinORMaxReplicasEntry
	12, // 4: protobuf.HASInfo.HPACurrentReplicas:type_name -> protobuf.HASInfo.HPACurrentReplicasEntry
	13, // 5: protobuf.ResponseLB.ScoreMap:type_name -> protobuf.ResponseLB.ScoreMapEntry
	4,  // 6: protobuf.RequestAnalysis.SendHASMinAnalysis:input_type -> protobuf.HASInfo
	4,  // 7: protobuf.RequestAnalysis.SendHASMaxAnalysis:input_type -> protobuf.HASInfo
	6,  // 8: protobuf.RequestAnalysis.SendLBAnalysis:input_type -> protobuf.LBInfo
	8,  // 9: protobuf.RequestAnalysis.SendNetworkAnalysis:input_type -> protobuf.NodeInfo
	0,  // 10: protobuf.RequestAnalysis.SendCPAAnalysis:input_type -> protobuf.HASDeployList
	5,  // 11: protobuf.RequestAnalysis.SendHASMinAnalysis:output_type -> protobuf.ResponseHAS
	5,  // 12: protobuf.RequestAnalysis.SendHASMaxAnalysis:output_type -> protobuf.ResponseHAS
	7,  // 13: protobuf.RequestAnalysis.SendLBAnalysis:output_type -> protobuf.ResponseLB
	9,  // 14: protobuf.RequestAnalysis.SendNetworkAnalysis:output_type -> protobuf.ResponseNetwork
	2,  // 15: protobuf.RequestAnalysis.SendCPAAnalysis:output_type -> protobuf.ResponseHASDeployList
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_generated_proto_init() }
func file_generated_proto_init() {
	if File_generated_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_generated_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HASDeployList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HASDeployInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHASDeployList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHASDeploy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HASInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseHAS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LBInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseLB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generated_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseNetwork); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_generated_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_generated_proto_goTypes,
		DependencyIndexes: file_generated_proto_depIdxs,
		MessageInfos:      file_generated_proto_msgTypes,
	}.Build()
	File_generated_proto = out.File
	file_generated_proto_rawDesc = nil
	file_generated_proto_goTypes = nil
	file_generated_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// RequestAnalysisClient is the client API for RequestAnalysis service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RequestAnalysisClient interface {
	SendHASMinAnalysis(ctx context.Context, in *HASInfo, opts ...grpc.CallOption) (*ResponseHAS, error)
	SendHASMaxAnalysis(ctx context.Context, in *HASInfo, opts ...grpc.CallOption) (*ResponseHAS, error)
	SendLBAnalysis(ctx context.Context, in *LBInfo, opts ...grpc.CallOption) (*ResponseLB, error)
	SendNetworkAnalysis(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*ResponseNetwork, error)
	SendCPAAnalysis(ctx context.Context, in *HASDeployList, opts ...grpc.CallOption) (*ResponseHASDeployList, error)
}

type requestAnalysisClient struct {
	cc grpc.ClientConnInterface
}

func NewRequestAnalysisClient(cc grpc.ClientConnInterface) RequestAnalysisClient {
	return &requestAnalysisClient{cc}
}

func (c *requestAnalysisClient) SendHASMinAnalysis(ctx context.Context, in *HASInfo, opts ...grpc.CallOption) (*ResponseHAS, error) {
	out := new(ResponseHAS)
	err := c.cc.Invoke(ctx, "/protobuf.RequestAnalysis/SendHASMinAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestAnalysisClient) SendHASMaxAnalysis(ctx context.Context, in *HASInfo, opts ...grpc.CallOption) (*ResponseHAS, error) {
	out := new(ResponseHAS)
	err := c.cc.Invoke(ctx, "/protobuf.RequestAnalysis/SendHASMaxAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestAnalysisClient) SendLBAnalysis(ctx context.Context, in *LBInfo, opts ...grpc.CallOption) (*ResponseLB, error) {
	out := new(ResponseLB)
	err := c.cc.Invoke(ctx, "/protobuf.RequestAnalysis/SendLBAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestAnalysisClient) SendNetworkAnalysis(ctx context.Context, in *NodeInfo, opts ...grpc.CallOption) (*ResponseNetwork, error) {
	out := new(ResponseNetwork)
	err := c.cc.Invoke(ctx, "/protobuf.RequestAnalysis/SendNetworkAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *requestAnalysisClient) SendCPAAnalysis(ctx context.Context, in *HASDeployList, opts ...grpc.CallOption) (*ResponseHASDeployList, error) {
	out := new(ResponseHASDeployList)
	err := c.cc.Invoke(ctx, "/protobuf.RequestAnalysis/SendCPAAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RequestAnalysisServer is the server API for RequestAnalysis service.
type RequestAnalysisServer interface {
	SendHASMinAnalysis(context.Context, *HASInfo) (*ResponseHAS, error)
	SendHASMaxAnalysis(context.Context, *HASInfo) (*ResponseHAS, error)
	SendLBAnalysis(context.Context, *LBInfo) (*ResponseLB, error)
	SendNetworkAnalysis(context.Context, *NodeInfo) (*ResponseNetwork, error)
	SendCPAAnalysis(context.Context, *HASDeployList) (*ResponseHASDeployList, error)
}

// UnimplementedRequestAnalysisServer can be embedded to have forward compatible implementations.
type UnimplementedRequestAnalysisServer struct {
}

func (*UnimplementedRequestAnalysisServer) SendHASMinAnalysis(context.Context, *HASInfo) (*ResponseHAS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendHASMinAnalysis not implemented")
}
func (*UnimplementedRequestAnalysisServer) SendHASMaxAnalysis(context.Context, *HASInfo) (*ResponseHAS, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendHASMaxAnalysis not implemented")
}
func (*UnimplementedRequestAnalysisServer) SendLBAnalysis(context.Context, *LBInfo) (*ResponseLB, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendLBAnalysis not implemented")
}
func (*UnimplementedRequestAnalysisServer) SendNetworkAnalysis(context.Context, *NodeInfo) (*ResponseNetwork, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendNetworkAnalysis not implemented")
}
func (*UnimplementedRequestAnalysisServer) SendCPAAnalysis(context.Context, *HASDeployList) (*ResponseHASDeployList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendCPAAnalysis not implemented")
}

func RegisterRequestAnalysisServer(s *grpc.Server, srv RequestAnalysisServer) {
	s.RegisterService(&_RequestAnalysis_serviceDesc, srv)
}

func _RequestAnalysis_SendHASMinAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HASInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestAnalysisServer).SendHASMinAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RequestAnalysis/SendHASMinAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestAnalysisServer).SendHASMinAnalysis(ctx, req.(*HASInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestAnalysis_SendHASMaxAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HASInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestAnalysisServer).SendHASMaxAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RequestAnalysis/SendHASMaxAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestAnalysisServer).SendHASMaxAnalysis(ctx, req.(*HASInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestAnalysis_SendLBAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LBInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestAnalysisServer).SendLBAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RequestAnalysis/SendLBAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestAnalysisServer).SendLBAnalysis(ctx, req.(*LBInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestAnalysis_SendNetworkAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NodeInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestAnalysisServer).SendNetworkAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RequestAnalysis/SendNetworkAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestAnalysisServer).SendNetworkAnalysis(ctx, req.(*NodeInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _RequestAnalysis_SendCPAAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HASDeployList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RequestAnalysisServer).SendCPAAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.RequestAnalysis/SendCPAAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RequestAnalysisServer).SendCPAAnalysis(ctx, req.(*HASDeployList))
	}
	return interceptor(ctx, in, info, handler)
}

var _RequestAnalysis_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.RequestAnalysis",
	HandlerType: (*RequestAnalysisServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendHASMinAnalysis",
			Handler:    _RequestAnalysis_SendHASMinAnalysis_Handler,
		},
		{
			MethodName: "SendHASMaxAnalysis",
			Handler:    _RequestAnalysis_SendHASMaxAnalysis_Handler,
		},
		{
			MethodName: "SendLBAnalysis",
			Handler:    _RequestAnalysis_SendLBAnalysis_Handler,
		},
		{
			MethodName: "SendNetworkAnalysis",
			Handler:    _RequestAnalysis_SendNetworkAnalysis_Handler,
		},
		{
			MethodName: "SendCPAAnalysis",
			Handler:    _RequestAnalysis_SendCPAAnalysis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "generated.proto",
}
